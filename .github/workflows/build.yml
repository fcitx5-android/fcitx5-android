name: Build

on:
  pull_request:
  push:
    branches: [master]

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Install extra-cmake-modules
        run: |
          sudo apt update
          sudo apt install extra-cmake-modules

      - name: Cache JNI build
        uses: actions/cache@v2
        with:
          path: |
            app/.cxx
            app/build/intermediates
          key: ${{ runner.os }}-jni-build

      - name: Build Release APK
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: assembleRelease
          gradle-version: wrapper

      - name: Sign APK
        if: ${{ github.event_name == 'push' }}
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_apk
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Release APK
          path: ${{ github.event_name == 'push' && steps.sign_apk.outputs.signedReleaseFile || 'app/build/outputs/apk/release/*.apk' }}

      - name: Notify Telegram group
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -H "content-type: application/json" \
            -d @- << EOF
          {
          "chat_id": ${{ secrets.TELEGRAM_TO }},
          "text": "Job [${{ github.workflow }} / ${{ github.job }} \\\(${{ github.event_name }}\\\) \\\#${{ github.run_number }}]\
          (https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) \
          by [${{ github.actor }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \
          ${{ job.status == 'success' && 'succeed ✔' || 'failed ✘' }}",
          "parse_mode": "MarkdownV2",
          "disable_web_page_preview": true
          }
          EOF
