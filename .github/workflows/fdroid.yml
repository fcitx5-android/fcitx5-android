name: F-Droid

on:
  repository_dispatch:
    types: [fdroid_build_fcitx5]

defaults:
  run:
    shell: bash

jobs:
  fdroid-build:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/fdroid/fdroidserver:buildserver-bullseye
    strategy:
      matrix:
        abi:
          - 1
          - 2
          - 3
          - 4
      fail-fast: false
    env:
      APP_ID: org.fcitx.fcitx5.android
    steps:
      - name: Fetch fdroiddata
        uses: actions/checkout@v3
        with:
          repository: f-droid/fdroiddata

      - name: Fetch fdroidserver
        uses: actions/checkout@v3
        with:
          repository: f-droid/fdroidserver
          path: fdroidserver

      - name: Setup fdroidserver
        run: |
          source /etc/profile.d/bsenv.sh
          rm -rf $fdroidserver
          mv $GITHUB_WORKSPACE/fdroidserver $fdroidserver 

          rm -rf $ANDROID_HOME/tools
          sdkmanager "tools" "platform-tools" "build-tools;31.0.0"
          for d in logs tmp unsigned $home_vagrant/metadata $home_vagrant/.android $home_vagrant/.gradle $ANDROID_HOME; do
              test -d $d || mkdir $d;
              chown -R vagrant $d;
          done
          ln -s $home_vagrant/.gradle $GITHUB_WORKSPACE/.gradle
          ln -s $GITHUB_WORKSPACE/tmp $home_vagrant/tmp
          ln -s $GITHUB_WORKSPACE/srclibs $home_vagrant/srclibs
          mv $GITHUB_WORKSPACE/build $home_vagrant/build
          ln -s $home_vagrant/build $GITHUB_WORKSPACE/build
          chown -R vagrant $GITHUB_WORKSPACE

      - name: Setup fdroiddata
        run: |
          set -x
          source /etc/profile.d/bsenv.sh
          curl -Lo /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/bin/yq
          metadata="$home_vagrant/metadata/$APP_ID.yml"
          curl -Lo $metadata "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/app/$APP_ID.yml"
          build_metadata=$(curl https://jenkins.fcitx-im.org/job/android/job/fcitx5-android/lastSuccessfulBuild/artifact/out/build-metadata.json)
          versionName=$(echo $build_metadata | yq ".versionName")
          echo "versionName: $versionName"
          commitHash=$(echo $build_metadata | yq ".commitHash")
          timestamp=$(echo $build_metadata | yq ".timestamp")
          baseVersionCode=$(curl https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/build-logic/convention/src/main/kotlin/Versions.kt | grep "baseVersionCode =" | sed 's/.*= //')
          abi=("armeabi-v7a" "arm64-v8a" "x86" "x86_64")

          i=${{ matrix.abi }}
          versionCode=$(expr $baseVersionCode \* 10 + $i)
          yq -i ".Builds[$(expr $i - 5)] |=
              (.versionName = \"$versionName\") |=
              (.versionCode = $versionCode) |=
              (.commit = \"$commitHash\")
          " $metadata
          yq ".Builds[$(expr $i - 5)]" $metadata

          cp $metadata $GITHUB_WORKSPACE/metadata

      - name: Build
        run: |
          source /etc/profile.d/bsenv.sh
          export PATH="$fdroidserver:$PATH"
          export PYTHONPATH="$fdroidserver:$fdroidserver/examples"
          export PYTHONUNBUFFERED=true
          export GRADLE_USER_HOME=$home_vagrant/.gradle
          export fdroid="sudo --preserve-env --user vagrant
              env PATH=$fdroidserver:$PATH
              env PYTHONPATH=$fdroidserver:$fdroidserver/examples
              env PYTHONUNBUFFERED=true
              env TERM=$TERM
              env HOME=$home_vagrant
              fdroid"

          baseVersionCode=$(curl https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/build-logic/convention/src/main/kotlin/Versions.kt | grep "baseVersionCode =" | sed 's/.*= //')

          i=${{ matrix.abi }}
          versionCode=$(expr $baseVersionCode \* 10 + $i)
          build="$APP_ID:$versionCode"
          set -x
          apt-get install sudo
          chown -R vagrant $home_vagrant
          $fdroid fetchsrclibs $build --verbose
          cd $home_vagrant
          $fdroid build --verbose --test --scan-binary --on-server --no-tarball $build

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: ${{ success() || failure() }}
        with:
          path: tmp/
          retention-days: 7
